{"remainingRequest":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/thread-loader/dist/cjs.js!/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/babel-loader/lib/index.js!/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/eslint-loader/index.js??ref--13-0!/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/src/api/user.js","dependencies":[{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/src/api/user.js","mtime":1622360442511},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHsgVVNFUl9NT0RVTEUgfSBmcm9tICIuL19wcmVmaXgiOwovKioNCiAqIOeUqOaIt+azqOWGjCBQT1NUIC91c2VyL3JlZ2lzdGVyDQogKiBAcGFyYW0geyp9IHBheWxvYWQNCiAqIEByZXR1cm5zDQogKi8KCmV4cG9ydCB2YXIgcmVnaXN0ZXIgPSBmdW5jdGlvbiByZWdpc3RlcihwYXlsb2FkKSB7CiAgY29uc29sZS5sb2cocGF5bG9hZCk7CiAgdmFyIHVuYW1lID0gcGF5bG9hZC51bmFtZSwKICAgICAgcGhvbmUgPSBwYXlsb2FkLnBob25lLAogICAgICBwYXNzd29yZCA9IHBheWxvYWQucGFzc3dvcmQsCiAgICAgIHBpY3R1cmUgPSBwYXlsb2FkLnBpY3R1cmUsCiAgICAgIF9wYXlsb2FkJHVzZXJSb2xlID0gcGF5bG9hZC51c2VyUm9sZSwKICAgICAgdXNlclJvbGUgPSBfcGF5bG9hZCR1c2VyUm9sZSA9PT0gdm9pZCAwID8gIlNUVURFTlQiIDogX3BheWxvYWQkdXNlclJvbGU7CiAgcmV0dXJuIGF4aW9zLnBvc3QoIiIuY29uY2F0KFVTRVJfTU9EVUxFLCAiL3JlZ2lzdGVyIiksIHsKICAgIHVuYW1lOiB1bmFtZSwKICAgIHBob25lOiBwaG9uZSwKICAgIHBhc3N3b3JkOiBwYXNzd29yZCwKICAgIHBpY3R1cmU6IHBpY3R1cmUsCiAgICB1c2VyUm9sZTogdXNlclJvbGUKICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgIHJldHVybiByZXMuZGF0YTsKICB9KTsKICAvKiog5YmN5ZCO56uv5YiG56a75byA5Y+R5pe2IOWJjeerr+WPr+S7peiHquW3seWGmeeugOaYk+eahCBtb2NrICAqLwogIC8vIHJldHVybiBQcm9taXNlLnJlc29sdmUoewogIC8vICAgImNvZGUiOiAxLAogIC8vICAgIm1zZyI6ICLotKblj7fms6jlhozmiJDlip/vvIEiLAogIC8vICAgImRhdGEiOiB7CiAgLy8gICAgICJpZCI6IDMsCiAgLy8gICAgICJ1bmFtZSI6ICLlsI/lvKDlkIzlraYiLAogIC8vICAgICAicGhvbmUiOiAiMTAyMTIzNDU2Nzg5IiwKICAvLyAgICAgInBhc3N3b3JkIjogbnVsbCwKICAvLyAgICAgInBpY3R1cmUiOiAiMS5wbmciLAogIC8vICAgICAiYmFsYW5jZSI6IDAsCiAgLy8gICAgICJ1c2VyUm9sZSI6ICJTVFVERU5UIiwKICAvLyAgICAgImNyZWF0ZVRpbWUiOiAiMjAyMS0wMy0xM1QwMTo0NTo0OC4yNDYrMDA6MDAiCiAgLy8gICB9CiAgLy8gfSk7Cn07Ci8qKg0KICogIOeUqOaIt+eZu+W9lSBQT1NUIC91c2VyL2xvZ2luDQogKiBAcGFyYW0geyp9IHBheWxvYWQNCiAqIEByZXR1cm5zDQogKi8KCmV4cG9ydCB2YXIgbG9naW4gPSBmdW5jdGlvbiBsb2dpbihwYXlsb2FkKSB7CiAgY29uc29sZS5sb2cocGF5bG9hZCk7CiAgdmFyIHBob25lID0gcGF5bG9hZC5waG9uZSwKICAgICAgcGFzc3dvcmQgPSBwYXlsb2FkLnBhc3N3b3JkOwogIHJldHVybiBheGlvcy5wb3N0KCIiLmNvbmNhdChVU0VSX01PRFVMRSwgIi9sb2dpbiIpLCB7CiAgICBwaG9uZTogcGhvbmUsCiAgICBwYXNzd29yZDogcGFzc3dvcmQKICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgIHJldHVybiByZXMuZGF0YTsKICB9KTsgLy8gcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7CiAgLy8gICAiY29kZSI6IDEsCiAgLy8gICAibXNnIjogIui0puWPt+eZu+W9leaIkOWKn++8gSIsCiAgLy8gICAiZGF0YSI6IHsKICAvLyAgICAgImlkIjogMywKICAvLyAgICAgInVuYW1lIjogIuWwj+W8oOWQjOWtpiIsCiAgLy8gICAgICJwaG9uZSI6ICIxMDIxMjM0NTY3ODkiLAogIC8vICAgICAicGFzc3dvcmQiOiBudWxsLAogIC8vICAgICAicGljdHVyZSI6ICIxLnBuZyIsCiAgLy8gICAgICJiYWxhbmNlIjogMCwKICAvLyAgICAgInVzZXJSb2xlIjogIkFETUlOIiwKICAvLyAgICAgImNyZWF0ZVRpbWUiOiAiMjAyMS0wMy0xM1QwMTo0NTo0OC4yNDYrMDA6MDAiCiAgLy8gICB9CiAgLy8gfSk7Cn07Ci8qKg0KICogIOiOt+WPlueUqOaItyBHRVQgL3VzZXIve3VpZH0NCiAqIEBwYXJhbSB7Kn0gdWlkDQogKiBAcmV0dXJucw0KICovCgpleHBvcnQgdmFyIGdldFVzZXIgPSBmdW5jdGlvbiBnZXRVc2VyKHVpZCkgewogIGNvbnNvbGUubG9nKHVpZCk7CiAgcmV0dXJuIGF4aW9zLmdldCgiIi5jb25jYXQoVVNFUl9NT0RVTEUsICIvIikuY29uY2F0KHVpZCkpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgcmV0dXJuIHJlcy5kYXRhOwogIH0pOwp9Ow=="},{"version":3,"sources":["/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/src/api/user.js"],"names":["axios","USER_MODULE","register","payload","console","log","uname","phone","password","picture","userRole","post","then","res","data","login","getUser","uid","get"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,OAAO,EAAI;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AADiC,MAEzBG,KAFyB,GAEiCH,OAFjC,CAEzBG,KAFyB;AAAA,MAElBC,KAFkB,GAEiCJ,OAFjC,CAElBI,KAFkB;AAAA,MAEXC,QAFW,GAEiCL,OAFjC,CAEXK,QAFW;AAAA,MAEDC,OAFC,GAEiCN,OAFjC,CAEDM,OAFC;AAAA,0BAEiCN,OAFjC,CAEQO,QAFR;AAAA,MAEQA,QAFR,kCAEmB,SAFnB;AAGjC,SAAOV,KAAK,CACTW,IADI,WACIV,WADJ,gBAC4B;AAC/BK,IAAAA,KAAK,EAALA,KAD+B;AAE/BC,IAAAA,KAAK,EAALA,KAF+B;AAG/BC,IAAAA,QAAQ,EAARA,QAH+B;AAI/BC,IAAAA,OAAO,EAAPA,OAJ+B;AAK/BC,IAAAA,QAAQ,EAARA;AAL+B,GAD5B,EAQJE,IARI,CAQC,UAAAC,GAAG,EAAI;AACX,WAAOA,GAAG,CAACC,IAAX;AACD,GAVI,CAAP;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA9BM;AAgCP;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAZ,OAAO,EAAI;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAD8B,MAEtBI,KAFsB,GAEFJ,OAFE,CAEtBI,KAFsB;AAAA,MAEfC,QAFe,GAEFL,OAFE,CAEfK,QAFe;AAG9B,SAAOR,KAAK,CAACW,IAAN,WAAcV,WAAd,aAAmC;AAAEM,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,QAAQ,EAARA;AAAT,GAAnC,EAAwDI,IAAxD,CAA6D,UAAAC,GAAG,EAAI;AACzE,WAAOA,GAAG,CAACC,IAAX;AACD,GAFM,CAAP,CAH8B,CAM9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CApBM;AAsBP;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU,CAAAC,GAAG,EAAI;AAC5Bb,EAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACA,SAAOjB,KAAK,CAACkB,GAAN,WAAajB,WAAb,cAA4BgB,GAA5B,GAAmCL,IAAnC,CAAwC,UAAAC,GAAG,EAAI;AACpD,WAAOA,GAAG,CAACC,IAAX;AACD,GAFM,CAAP;AAGD,CALM","sourcesContent":["import axios from \"axios\";\r\nimport { USER_MODULE } from \"./_prefix\";\r\n\r\n/**\r\n * 用户注册 POST /user/register\r\n * @param {*} payload\r\n * @returns\r\n */\r\nexport const register = payload => {\r\n  console.log(payload);\r\n  const { uname, phone, password, picture, userRole = \"STUDENT\" } = payload;\r\n  return axios\r\n    .post(`${USER_MODULE}/register`, {\r\n      uname,\r\n      phone,\r\n      password,\r\n      picture,\r\n      userRole\r\n    })\r\n    .then(res => {\r\n      return res.data;\r\n    });\r\n\r\n  /** 前后端分离开发时 前端可以自己写简易的 mock  */\r\n  // return Promise.resolve({\r\n  //   \"code\": 1,\r\n  //   \"msg\": \"账号注册成功！\",\r\n  //   \"data\": {\r\n  //     \"id\": 3,\r\n  //     \"uname\": \"小张同学\",\r\n  //     \"phone\": \"102123456789\",\r\n  //     \"password\": null,\r\n  //     \"picture\": \"1.png\",\r\n  //     \"balance\": 0,\r\n  //     \"userRole\": \"STUDENT\",\r\n  //     \"createTime\": \"2021-03-13T01:45:48.246+00:00\"\r\n  //   }\r\n  // });\r\n};\r\n\r\n/**\r\n *  用户登录 POST /user/login\r\n * @param {*} payload\r\n * @returns\r\n */\r\nexport const login = payload => {\r\n  console.log(payload);\r\n  const { phone, password } = payload;\r\n  return axios.post(`${USER_MODULE}/login`, { phone, password }).then(res => {\r\n    return res.data;\r\n  });\r\n  // return Promise.resolve({\r\n  //   \"code\": 1,\r\n  //   \"msg\": \"账号登录成功！\",\r\n  //   \"data\": {\r\n  //     \"id\": 3,\r\n  //     \"uname\": \"小张同学\",\r\n  //     \"phone\": \"102123456789\",\r\n  //     \"password\": null,\r\n  //     \"picture\": \"1.png\",\r\n  //     \"balance\": 0,\r\n  //     \"userRole\": \"ADMIN\",\r\n  //     \"createTime\": \"2021-03-13T01:45:48.246+00:00\"\r\n  //   }\r\n  // });\r\n};\r\n\r\n/**\r\n *  获取用户 GET /user/{uid}\r\n * @param {*} uid\r\n * @returns\r\n */\r\nexport const getUser = uid => {\r\n  console.log(uid);\r\n  return axios.get(`${USER_MODULE}/${uid}`).then(res => {\r\n    return res.data;\r\n  });\r\n};\r\n"]}]}