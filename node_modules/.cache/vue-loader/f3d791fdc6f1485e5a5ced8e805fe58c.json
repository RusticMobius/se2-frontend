{"remainingRequest":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/src/views/student/Testing.vue?vue&type=style&index=0&id=354940f2&scoped=true&lang=css&","dependencies":[{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/src/views/student/Testing.vue","mtime":1625890183371},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hbGVydCB7CiAgcG9zaXRpb246IGZpeGVkOwogIGxlZnQ6IDUwJTsKICB0b3A6IDIwMHB4OwogIHotaW5kZXg6IDk5OTsKfQo="},{"version":3,"sources":["Testing.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+QA;AACA;AACA;AACA;AACA;AACA","file":"Testing.vue","sourceRoot":"src/views/student","sourcesContent":["<template>\n  <div>\n    <v-alert\n      class=\"alert\"\n      outlined\n      type=\"success\"\n      text\n      v-show=\"showSuccessDialog\"\n      transition=\"scroll-y-transition\"\n  >\n    测试提交成功！\n  </v-alert>\n    <!-- alert -->\n    <v-alert\n        class=\"alert\"\n        type=\"warning\"\n        text\n        v-show=\"showFailDialog\"\n        transition=\"scroll-y-transition\"\n    >\n      {{ msg }}\n    </v-alert>\n  <v-container>\n\n    <v-toolbar color=\"indigo lighten-1\" dark class=\"mt-10 mb-10\">\n      <v-toolbar-title>{{testName}}</v-toolbar-title>\n    </v-toolbar>\n\n    <v-row\n        v-for=\"(ques,index) in questionList\"\n        :key=\"ques.index\">\n      <v-chip  outlined dark class=\"ma-6\" color=\"indigo\">\n        {{index+1}}\n      </v-chip>\n\n      <qusetion-item-student @getAnswer=\"processAnswer\"\n          v-if=\"isTesting&&!hasSubmitted\"\n          :in-test-duration=true\n          :teacher-id=\"ques.teacherId\"\n          :course-id=\"ques.courseId\"\n          :content=\"ques.content\"\n          :analysis=\"ques.analysis\"\n          :answer=\"ques.answer\"\n          :ques-id=\"ques.id\"\n          :type=\"ques.type\"\n      >\n      </qusetion-item-student>\n      <question-item\n          v-if=\"hasSubmitted\"\n          :key=\"ques.id\"\n          :teacher-id=\"ques.teacherId\"\n          :course-id=\"ques.courseId\"\n          :content=\"ques.content\"\n          :analysis=\"ques.analysis\"\n          :answer=\"ques.answer\"\n          :ques-id=\"ques.id\"\n          :type=\"ques.type\"\n          :show-analysis=\"true\"\n          :user-answer=\"scoreList[index].info===undefined?'':scoreList[index].info\"\n      >\n      </question-item>\n      <question-item\n          v-if=\"!isTesting&&!hasSubmitted\"\n          :key=\"ques.id\"\n          :teacher-id=\"ques.teacherId\"\n          :course-id=\"ques.courseId\"\n          :content=\"ques.content\"\n          :analysis=\"ques.analysis\"\n          :answer=\"ques.answer\"\n          :ques-id=\"ques.id\"\n          :type=\"ques.type\"\n          :show-analysis=\"true\"\n      >\n\n      </question-item>\n\n      <v-chip v-if=\"hasSubmitted\"\n              dark\n              large\n              class=\"ma-6\"\n              :color=\"scoreList[index].score===10?'blue lighten-1':(scoreList[index].score===5?'orange':'red lighten-1')\"\n      ><v-avatar left>\n        <v-icon v-if=\"scoreList[index].score===10\">mdi-checkbox-marked-circle</v-icon>\n        <v-icon v-if=\"scoreList[index].score!==10\">mdi-close-circle </v-icon>\n      </v-avatar>\n        你的答案 : {{scoreList[index].info}}\n      </v-chip>\n\n    </v-row>\n    <v-toolbar v-if=\"isTesting&&!hasSubmitted\" color=\"indigo lighten-1\" dark class=\"mt-10 mb-10\">\n      <v-toolbar-title >本次测试共{{questionList.length}}道题目，您已作答{{answerNum}}道，提交后不可更改</v-toolbar-title>\n      <v-btn class=\"ml-16\" @click=\"submit\" color=\"orange\" rounded outlined dark v-if=\"!hasSubmitted\">\n        确认提交\n      </v-btn>\n    </v-toolbar>\n    <v-toolbar v-if=\"hasSubmitted\" color=\"indigo lighten-1\" dark class=\"mt-10 mb-10\">\n      <v-toolbar-title>本次测试共{{testLength}}道题目，您共答对了{{correctCount+halfCorrectCount}}道题目，{{halfCorrectCount>0?\"其中\"+halfCorrectCount+\"道没有选出所有的正确答案\":\"\"}} 总得分{{totalScore}}</v-toolbar-title>\n    </v-toolbar>\n    <v-toolbar v-if=\"!hasSubmitted&&!isTesting\" color=\"indigo lighten-1\" dark class=\"mt-10 mb-10\">\n      <v-toolbar-title>您未参与本次测试</v-toolbar-title>\n    </v-toolbar>\n\n  </v-container>\n  </div>\n\n</template>\n\n<script>\nimport QusetionItemStudent from \"@/components/QusetionItemStudent\";\nimport {getQuestionByTestId} from \"@/api/question\";\nimport {createScore} from \"@/api/score\";\nimport {getScore} from \"@/api/score\";\nimport {getTestById} from \"@/api/test\";\nimport QuestionItem from \"@/components/QuestionItem\";\n\nexport default {\n  name: \"Testing\",\n  components:{\n    QusetionItemStudent,\n    QuestionItem\n  },\n  data(){\n    return{\n      scoreList:[],\n      questionList:[],\n      isTesting:null,\n      hasSubmitted:false,\n      testName:\"\",\n      testLength:null,\n      userAnswerList:[],\n      answerNum:0,\n      dialog: false,\n      showSuccessDialog: false,\n      showFailDialog: false,\n      msg: \"\",\n      correctCount:0,\n      halfCorrectCount:0,\n      totalScore:0,\n    }\n  },\n  mounted() {\n    const tid=this.$route.params.testId;\n    this.isTesting=(this.$route.query.state===\"false\"? false:true);\n    console.log(this.isTesting)\n    console.log(this.userAnswerList)\n    getTestById(tid).then(res=>{\n      this.testName=res.testName;\n      this.testLength=res.length;\n      console.log(this.testLength)\n    })\n    getQuestionByTestId(tid).then(res=>{\n      console.log(res);\n      this.questionList=res||[];\n      for(let i=0;i< this.questionList.length;i++){\n        this.userAnswerList.push({\"questionId\":this.questionList[i].id,\n          \"info\":\"\",\n          \"score\":0})\n      }\n      this.processScore();\n\n    })\n\n\n  },\n  watch:{\n    \"scoreList\":{\n      handler:function (val){\n        console.log(val)\n\n        if(val.length===this.questionList.length){\n          this.hasSubmitted=true;\n          console.log(\"calaulating\")\n          for(let i=0;i<val.length;i++){\n            if(this.scoreList[i].score===10){\n              this.correctCount+=1;\n              this.totalScore+=10;\n            }else if(this.scoreList[i].score===5){\n              this.halfCorrectCount+=1;\n              this.totalScore+=5;\n            }\n          }\n\n        console.log(this.totalScore)\n          console.log(this.scoreList.length)\n        console.log(10/this.scoreList.length)\n         let temp=(100/parseInt(this.testLength))*parseInt(this.totalScore)/10;\n          this.totalScore=temp;\n          console.log(temp)\n        }\n      }\n    }\n  },\n  methods:{\n\n\n    processScore(){\n      console.log(\"process score\")\n      const uid=window.localStorage.getItem(\"userId\");\n      const tid=this.$route.params.testId;\n      console.log(this.questionList)\n      for(let i=0;i<this.questionList.length;i++){\n        console.log(uid)\n        var sid=uid;\n        var questionId=this.questionList[i].id;\n        var testId=tid;\n        getScore({questionId,sid,testId}).then(res=>{\n\n          console.log(res)\n          this.scoreList.push({\"questionId\":res.questionId,\n        \"testId\":res.testId,\"studentId\":res.studentId,\"info\":res.info,\n          \"score\":res.score});\n\n        })\n\n      }\n    },\n    processAnswer(questionId,answer,score){\n      console.log(this.scoreList.length,this.questionList.length)\n      this.answerNum=0;\n      console.log(answer,questionId,score);\n      for(let i=0;i<this.userAnswerList.length;i++){\n        //console.log(this.userAnswerList[i].questionId)\n        //console.log(questionId)\n        if(this.userAnswerList[i].questionId===questionId){\n          this.userAnswerList[i].info=answer;\n          this.userAnswerList[i].score=score;\n\n        }\n        if(this.userAnswerList[i].userAnswer!==\"\"){\n          this.answerNum+=1;\n        }\n      }\n      //console.log(this.answerNum)\n    },\n    submit(){\n      console.log(\"I'm submiting\")\n      console.log(this.userAnswerList)\n      for(let i=0;i<this.userAnswerList.length;i++){\n        if(this.userAnswerList[i].userAnswer===\"\"){\n          this.showFailDialog = true;\n          this.msg = \"未答完所有题目\";\n          setTimeout(() => {\n            this.showFailDialog = false;\n          }, 1000);\n          break;\n        }\n      }\n      console.log(this.userAnswerList)\n      const uid=window.localStorage.getItem(\"userId\");\n      const tid=this.$route.params.testId;\n      for(let i=0;i<this.userAnswerList.length;i++){\n        const payload={\n          ...this.userAnswerList[i],\n          studentId:uid,\n          testId:tid,\n        }\n        console.log(payload)\n        createScore(payload).then(res=>{\n          console.log(res)\n        })\n      }\n      console.log(this.hasSubmitted)\n      this.hasSubmitted=true;\n      this.processScore();\n      this.$router.go(0)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.alert {\n  position: fixed;\n  left: 50%;\n  top: 200px;\n  z-index: 999;\n}\n</style>"]}]}