{"remainingRequest":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/src/views/teacher/TestCreate.vue?vue&type=style&index=0&id=535a1ab5&scoped=true&lang=css&","dependencies":[{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/src/views/teacher/TestCreate.vue","mtime":1625887912305},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYWxlcnQgewogIHBvc2l0aW9uOiBmaXhlZDsKICBsZWZ0OiA1MCU7CiAgdG9wOiAyMDBweDsKICB6LWluZGV4OiA5OTk7Cn0K"},{"version":3,"sources":["TestCreate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0TA;AACA;AACA;AACA;AACA;AACA","file":"TestCreate.vue","sourceRoot":"src/views/teacher","sourcesContent":["<template>\n  <div>\n    <v-alert\n        class=\"alert\"\n        type=\"success\"\n        text\n        v-show=\"showSuccessDialog\"\n        transition=\"scroll-y-transition\"\n    >\n      测试创建成功！\n    </v-alert>\n    <!-- alert -->\n    <v-alert\n        class=\"alert\"\n        type=\"warning\"\n        text\n        v-show=\"showFailDialog\"\n        transition=\"scroll-y-transition\"\n    >\n      {{ msg }}\n    </v-alert>\n    <v-container class=\"pl-16 pr-16\">\n      <v-toolbar color=\"deep-purple lighten-2\" dark class=\"mt-10\">\n        <v-toolbar-title>测试信息</v-toolbar-title>\n      </v-toolbar>\n      <form class=\"pa-12 grey lighten-5 mt-8\">\n\n        <v-select\n            :items=\"courseNameList\"\n            v-model=\"testInfo.courseName\"\n            label=\"所属课程\"\n            @change=\"setCourseId\"\n        ></v-select>\n        <v-text-field\n            v-model=\"testInfo.testName\"\n            label=\"标题\"\n        ></v-text-field>\n        <v-text-field\n            v-model=\"formatStartTime\"\n            label=\"起始时间\"\n            placeholder=\"格式如 2020-06-18 20：00：00\"\n        ></v-text-field>\n        <v-text-field\n            v-model=\"formatEndTime\"\n            label=\"截止时间\"\n            placeholder=\"格式如 2020-06-18 20：00：00\"\n        ></v-text-field>\n        <v-select\n            :items=\"testFormatLength\"\n            v-model=\"testLength\"\n            label=\"题目数量\"\n        ></v-select>\n        <v-text-field\n            disabled label=\"题目列表\"\n            :value=\"selectedQuesId\"\n            v-model=\"selectedQuesId\"\n\n        ></v-text-field>\n\n        <v-btn class=\"ml-0 mt-8 \" @click=\"submit\" color=\"indigo\" dark>\n          确认\n        </v-btn>\n      </form>\n      <v-toolbar color=\"deep-purple lighten-2\" dark class=\"mt-10 mb-10\">\n        <v-toolbar-title>选择题目 ( {{ selectedQuesId.length }} / {{testLength}} ) 已选{{selectedQuesId.length}}</v-toolbar-title>\n      </v-toolbar>\n      <v-row v-for=\"ques in questionList\" :key=\"ques.id\">\n        <v-checkbox :label=\"ques.id+''\" :value=\"ques.id\" class=\"ml-10 mt-4\" color=\"indigo\" v-model=\"selectedQuesId\" @change=\"checkLength\"></v-checkbox>\n        <question-item\n            :key=\"ques.id\"\n            :teacher-id=\"ques.teacherId\"\n            :course-id=\"ques.courseId\"\n            :content=\"ques.content\"\n            :analysis=\"ques.analysis\"\n            :answer=\"ques.answer\"\n            :ques-id=\"ques.id\"\n            :type=\"ques.type\"\n            :show-analysis=true\n\n        ></question-item>\n      </v-row>\n    </v-container>\n\n    <!-- 提示对话框 -->\n    <v-dialog v-model=\"dialog\" width=\"500\">\n      <v-card>\n        <v-card-title> </v-card-title>\n\n        <v-card-text>\n          专题创建成功。\n        </v-card-text>\n\n        <v-divider></v-divider>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" text @click=\"dialog = false\">\n            确认\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n\n</template>\n\n\n<script >\nimport {createTest} from \"@/api/test\";\nimport {getTeacherCourses} from \"@/api/course\";\nimport QuestionItem from \"../../components/QuestionItem.vue\";\nimport Vue from \"vue\";\nimport {addQuestionToTest} from \"@/api/question_test\";\nimport {getQuestionByCourseId} from \"@/api/question\";\n\nexport default Vue.extend( {\n  name: \"TestCreate\",\n  components:{\n  QuestionItem,\n  },\n  data() {\n    return {\n      testInfo: {\n        testName:null,\n        teacherId:null,\n        courseId: null,\n        startTime:null,\n        endTime:null,\n        length:null,\n        courseName:null,\n      },\n      selectedQuesId:[],\n      testFormatLength:[5,10,20,25],\n      testLength:0,\n      time:null,\n      types: [\"单选\", \"多选\"],\n      courseList:[],\n      courseNameList:[],\n      formatStartTime:null,\n      formatEndTime:null,\n      tests:[],\n      testLists:[1,2,3],\n      dialog: false,\n      showSuccessDialog: false,\n      showFailDialog: false,\n      msg: \"\",\n      questionList:[]\n    };\n  },\n  mounted() {\n    const uid = window.localStorage.getItem(\"userId\");\n    if (uid) {\n      getTeacherCourses(uid).then(res => {\n        //console.log(res);\n        for(var i=0;i<res.length;i++){\n          //console.log(res[i])\n          this.courseNameList.push(res[i].name);\n          this.courseList.push({\"name\":res[i].name,\"id\":res[i].id})\n        }\n      });\n\n    }\n\n  },\n  methods: {\n    checkDateFormat(){\n      var reDateTime = /^(?:19|20)[0-9][0-9]-(?:(?:0[1-9])|(?:1[0-2]))-(?:(?:[0-2][1-9])|(?:[1-3][0-1])) (?:(?:[0-2][0-3])|(?:[0-1][0-9])):[0-5][0-9]:[0-5][0-9]$/;\n      var isStartTime = reDateTime.test(this.formatStartTime);\n      var isEndTime=reDateTime.test(this.formatEndTime);\n      if(isStartTime===false) {\n        this.msg=\"起始日期格式有误\"\n        return true;\n      }\n      if(isEndTime===false){\n        this.msg=\"截止日期格式有误\"\n        return true;\n      }\n\n      return false;\n\n    },\n    setCourseId() {\n      this.questionList=[];\n      for (let i = 0; i < this.courseList.length; i++) {\n        if (this.testInfo.courseName === this.courseList[i].name) {\n          this.testInfo.courseId = this.courseList[i].id;\n          console.log(this.testInfo.courseId)\n        }\n      }\n      getQuestionByCourseId(this.testInfo.courseId).then(res=>{\n          for(let i=0;i<res.length;i++){\n        this.questionList.push(res[i]);\n        }\n      });\n\n    },\n    submit() {\n      console.log(\"I'm submiting\")\n      if( this.checkDateFormat()) {\n        this.showFailDialog=true;\n        setTimeout(() => {\n          this.showFailDialog = false;\n        }, 1000);\n      }else{\n        this.testInfo.startTime = this.dateConvertToStamp(this.formatStartTime);\n        this.testInfo.endTime = this.dateConvertToStamp(this.formatEndTime);\n        var currentTime = new Date().getTime();\n        if (this.selectedQuesId.length > this.testLength) {\n          this.showFailDialog = true;\n          this.msg = \"所选题目数量超过设置的题目数量\";\n          setTimeout(() => {\n            this.showFailDialog = false;\n          }, 1000);\n        } else if (this.selectedQuesId.length < this.testLength) {\n          this.showFailDialog = true;\n          this.msg = \"所选题目数量不足\";\n          setTimeout(() => {\n            this.showFailDialog = false;\n          }, 1000);\n        } else if (this.testInfo.endTime === \"\" || this.testInfo.endTime === null ||\n            this.testInfo.startTime === \"\" || this.testInfo.startTime === null ||\n            this.testInfo.courseId === \"\" || this.testInfo.courseId === null ||\n            this.testInfo.name === \"\" || this.testInfo.name === null) {\n          this.showFailDialog = true;\n          this.msg = \"必填信息不能为空\";\n          setTimeout(() => {\n            this.showFailDialog = false;\n          }, 1000);\n        } else if (this.testInfo.endTime<=currentTime){\n          this.showFailDialog = true;\n          this.msg=\"不能创建已经截止的考试\"\n          setTimeout(() => {\n            this.showFailDialog = false;\n          }, 1000);\n\n        } else if (this.testInfo.startTime >= this.testInfo.endTime) {\n          this.showFailDialog = true;\n          this.msg = \"起止时间非法\";\n          setTimeout(() => {\n            this.showFailDialog = false;\n          }, 1000);\n        } else {\n\n          const uid = window.localStorage.getItem(\"userId\");\n          this.testInfo.teacherId = uid;\n          console.log(this.testLength);\n          this.testInfo.length = this.testLength;\n          const payload = {\n            ...this.testInfo\n          };\n          if (uid) {\n            console.log(payload);\n            createTest(payload).then(res => {\n              console.log(res);\n              if (res.code === 1) {\n                const tid = res.data.id;\n                console.log(tid)\n                for(let index=0;index<this.selectedQuesId.length;index++){\n                  var record={\n                    \"questionId\":this.selectedQuesId[index],\n                    \"testId\":tid\n                  }\n                  addQuestionToTest(record).then(res=>{\n                    console.log(res)\n                  })\n                }\n                this.showSuccessDialog = true;\n                setTimeout(() => {\n                  this.showSuccessDialog = false;\n                }, 1000);\n              } else {\n                this.showFailDialog = true;\n                this.msg = res.msg;\n                setTimeout(() => {\n                  this.showFailDialog = false;\n                }, 1000);\n              }\n            });\n          }\n\n        }\n\n      }\n    },\n    dateConvertToStamp(date) {\n      date = date.replace(new RegExp(\"-\", \"gm\"), \"/\");\n      var stamp = (new Date(date)).getTime(); //得到毫秒数\n      console.log(stamp);\n      return stamp;\n    },\n    checkLength() {\n      // console.log(\"checking\")\n      if (this.testLength === 0) {\n        this.showFailDialog = true;\n        this.msg = \"未设置题目数量\";\n        setTimeout(() => {\n          this.showFailDialog = false;\n        }, 1000);\n      } else if (this.selectedQuesId.length > this.testLength) {\n\n        this.showFailDialog = true;\n        this.msg = \"所选题目数量超过设置的题目数量\";\n        setTimeout(() => {\n          this.showFailDialog = false;\n        }, 1000);\n      }\n    },\n  }\n\n})\n\n</script>\n\n<style scoped>\n.alert {\n  position: fixed;\n  left: 50%;\n  top: 200px;\n  z-index: 999;\n}\n</style>"]}]}