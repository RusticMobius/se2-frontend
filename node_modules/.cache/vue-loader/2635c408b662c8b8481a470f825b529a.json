{"remainingRequest":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/src/views/teacher/TestCreate.vue?vue&type=template&id=535a1ab5&scoped=true&","dependencies":[{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/src/views/teacher/TestCreate.vue","mtime":1625887912305},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/scarlett/IdeaProjects/35cf82cde2094d8a989779d9507bd7a7/front_end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}